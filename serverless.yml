service: cru-udp-pipeline

provider:
  name: aws
  stage: ${env:ENVIRONMENT}
  runtime: nodejs10.x
  region: us-east-1
  stackTags:
    Name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}
    owner: udp-support@cru.org
    application: ${env:PROJECT_NAME}
    env: ${self:custom.environmentMap.${env:ENVIRONMENT}}
    managed_by: serverless-framework
    function: lambda
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SQS:SendMessage
        - SQS:SendMessageBatch
      Resource:
        - ${env:UDP_EVENTS_SQS_QUEUE_ARN}
  environment: ${file(serverless/environment.js)}

functions:
  udp-events:
    handler: handlers/events.handler
    timeout: 30
    events:
      - stream:
          arn: ${env:SNOWPLOW_KINESIS_ENRICH_ARN}
          batchSize: 10 # batchSize must be 10 as it's the max for SQS:SendMessageBatch
          startingPosition: LATEST
          enabled: true

  tealium:
    handler: handlers/tealium.handler
    timeout: 30
    events:
      - stream:
          arn: ${env:SNOWPLOW_KINESIS_ENRICH_ARN}
          batchSize: 10
          startingPosition: LATEST
          enabled: true

package:
  exclude:
    - .git/**
    - test/**
    - '**/*.test.js'
    - '**/*.sql'
    - .deployment/**

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: yarn
    excludeFiles: '**/*.test.js'
  environmentMap:
    production: prod
    staging: stage
    development: dev
    lab: lab
